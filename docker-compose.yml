version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: image-processor-backend
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - AI_SERVICE_URL=http://ai-service:8001
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-10485760}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-5}
    volumes:
      - uploads:/app/uploads
      - processed:/app/processed
    depends_on:
      ai-service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI service
  ai-service:
    build:
      context: .
      dockerfile: ./ai-service/Dockerfile
    container_name: image-processor-ai
    ports:
      - "${AI_SERVICE_PORT:-8001}:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - MODEL_PATH=${MODEL_PATH:-/app/models/rmbg-1.4.onnx}
      - CONFIDENCE_THRESHOLD=${CONFIDENCE_THRESHOLD:-0.5}
    volumes:
      - models:/app/models
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: image-processor-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  uploads:
    driver: local
  processed:
    driver: local
  models:
    driver: local

networks:
  app-network:
    driver: bridge
